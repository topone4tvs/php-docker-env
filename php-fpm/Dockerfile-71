FROM php:7.1-fpm

MAINTAINER Macken <rystlee100@gmail.com>

#--------------------------------------------------------------------------
# Mandatory Software's Installation
#--------------------------------------------------------------------------

#
# Installing tools and PHP extentions using "apt", "docker-php", "pecl",
#

# Install "curl", "libmemcached-dev", "libpq-dev", "libjpeg-dev",
#         "libpng12-dev", "libfreetype6-dev", "libssl-dev", "libmcrypt-dev",
RUN apt-get update \
  && apt-get install -y --no-install-recommends \
    git \
    curl \
    zip \
    cmake \
    automake autoconf libtool \
    libmemcached-dev \
    libz-dev \
    libpq-dev \
    libjpeg-dev \
    libpng12-dev \
    libfreetype6-dev \
    libssl-dev \
    libmcrypt-dev 
#  && rm -rf /var/lib/apt/lists/*

# Install the PHP mcrypt extention
RUN docker-php-ext-install mcrypt \
    # Install the PHP pdo_mysql extention
    && docker-php-ext-install pdo_mysql \
    # Install the PHP pdo_pgsql extention
    && docker-php-ext-install pdo_pgsql \
    # Install the PHP mongo extention
    #&& docker-php-ext-install mongo \
    #&& docker-php-ext-enable mongo \
    # Install the PHP gd library
    && docker-php-ext-configure gd \
        --enable-bcmath \
        --enable-pcntl \
        --enable-sockets \
        --enable-gd-native-ttf \
        --with-jpeg-dir=/usr/lib \
        --with-freetype-dir=/usr/include/freetype2 && \
        docker-php-ext-install pcntl && \
        docker-php-ext-enable pcntl  && \
        docker-php-ext-install gd && \
        docker-php-ext-install sockets  && \
        docker-php-ext-enable sockets  && \
        docker-php-ext-install bcmath  && \
        docker-php-ext-enable bcmath 



#--------------------------------------------------------------------------
# Optional Software's Installation
#--------------------------------------------------------------------------
#
# Optional Software's will only be installed if you set them to `true`
# in the `docker-compose.yml` before the build.
# Example:
#   - INSTALL_ZIP_ARCHIVE=true
#   - ...
#
#

#####################################
# Apcu:
#####################################
RUN pecl install apcu && \
    docker-php-ext-enable apcu 

#####################################
# Amqp:
#####################################
RUN cd /tmp/ && \
    curl -o rabbitmq-lib.zip 'https://codeload.github.com/alanxz/rabbitmq-c/zip/master' && \
    unzip rabbitmq-lib.zip && \
    cd rabbitmq-c-master && \
    cmake . && \
    make && make install && \
    pecl install amqp && \
    docker-php-ext-enable amqp 

####################################
# mongodb
####################################
RUN pecl install mongodb && \
    docker-php-ext-enable mongodb

####################################
# tideways
####################################
RUN cd /tmp/ && \
    git clone https://github.com/tideways/php-profiler-extension.git && \
    cd php-profiler-extension && \
    phpize && \
    ./configure && make && make install && \
    docker-php-ext-enable tideways

#####################################
# SOAP:
#####################################

ARG INSTALL_SOAP=false
RUN if [ ${INSTALL_SOAP} = true ]; then \
    # Install the soap extension
    apt-get update -yqq && \
    apt-get -y install libxml2-dev php-soap && \
    docker-php-ext-install soap \
;fi

#####################################
# xDebug:
#####################################

ARG INSTALL_XDEBUG=false
RUN if [ ${INSTALL_XDEBUG} = true ]; then \
    # Install the xdebug extension
    pecl install xdebug && \
    docker-php-ext-enable xdebug \
;fi

# Copy xdebug configration for remote debugging
COPY ./xdebug.ini /usr/local/etc/php/conf.d/xdebug.ini

#####################################
# PHP REDIS EXTENSION FOR PHP 7.0
#####################################
ARG INSTALL_PHPREDIS=false
RUN if [ ${INSTALL_PHPREDIS} = true ]; then \
    # Install Php Redis Extension
    pecl install -o -f redis \
    &&  rm -rf /tmp/pear \
    &&  docker-php-ext-enable redis \
;fi

#####################################
# ZipArchive:
#####################################

ARG INSTALL_ZIP_ARCHIVE=false
RUN if [ ${INSTALL_ZIP_ARCHIVE} = true ]; then \
    # Install the zip extension
    #
    curl -L -o /tmp/libzip.tar.gz "https://nih.at/libzip/libzip-1.2.0.tar.gz" \
    && mkdir -p libzip \
    && tar -C libzip -zxvf /tmp/libzip.tar.gz --strip 1 \
    && ( \
        cd libzip \
        && ./configure \
        && make -j$(nproc) \
        && make install \
    ) \
    && rm -r libzip \
    && rm /tmp/libzip.tar.gz \
    && pecl install zip \
    && docker-php-ext-enable zip \
;fi


#####################################
# PHP Memcached:
#####################################

ARG INSTALL_MEMCACHED=false
RUN if [ ${INSTALL_MEMCACHED} = true ]; then \
    # Install the php memcached extension
    curl -L -o /tmp/memcached.tar.gz "https://github.com/php-memcached-dev/php-memcached/archive/php7.tar.gz" \
    && mkdir -p memcached \
    && tar -C memcached -zxvf /tmp/memcached.tar.gz --strip 1 \
    && ( \
        cd memcached \
        && phpize \
        && ./configure \
        && make -j$(nproc) \
        && make install \
    ) \
    && rm -r memcached \
    && rm /tmp/memcached.tar.gz \
    && docker-php-ext-enable memcached \
;fi


#####################################
# Opcache:
#####################################
ARG INSTALL_OPCACHE=true
RUN if [ ${INSTALL_OPCACHE} = true ]; then \
    docker-php-ext-install opcache && \
    docker-php-ext-enable opcache \
;fi

# Copy opcache configration
COPY ./opcache.ini /usr/local/etc/php/conf.d/opcache.ini


#
#--------------------------------------------------------------------------
# Final Touch
#--------------------------------------------------------------------------
#

ADD ./laravel.ini /usr/local/etc/php/conf.d/
ADD ./laravel.pool.conf /usr/local/etc/php-fpm.d/

RUN rm -r /var/lib/apt/lists/*

RUN usermod -u 1000 www-data

WORKDIR /var/www

CMD ["ln -sf bash /bin/sh"]
CMD ["php-fpm"]

EXPOSE 9000 9090
